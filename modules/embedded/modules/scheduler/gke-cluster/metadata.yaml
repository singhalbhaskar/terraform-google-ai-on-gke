apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-ai-on-gke-embedded/modules/scheduler/gke-cluster
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: terraform-google-ai-on-gke
    source:
      repo: https://github.com/singhalbhaskar/terraform-google-ai-on-gke
      sourceType: git
      dir: /modules/embedded/modules/scheduler/gke-cluster
    version: 1.45.0
    actuationTool:
      flavor: Terraform
      version: ">= 1.3"
    description: {}
    icon: assets/icon.png
  content:
    examples:
      - name: simple_example
        location: examples/simple_example
  interfaces:
    variables:
      - name: project_id
        description: The project ID to host the cluster in.
        varType: string
        required: true
      - name: name_suffix
        description: Custom cluster name postpended to the `deployment_name`. See `prefix_with_deployment_name`.
        varType: string
        defaultValue: ""
      - name: deployment_name
        description: Name of the HPC deployment. Used in the GKE cluster name by default and can be configured with `prefix_with_deployment_name`.
        varType: string
        required: true
      - name: prefix_with_deployment_name
        description: "If true, cluster name will be prefixed by `deployment_name` (ex: <deployment_name>-<name_suffix>)."
        varType: bool
        defaultValue: true
      - name: region
        description: The region to host the cluster in.
        varType: string
        required: true
      - name: zone
        description: Zone for a zonal cluster.
        varType: string
      - name: network_id
        description: "The ID of the GCE VPC network to host the cluster given in the format: `projects/<project_id>/global/networks/<network_name>`."
        varType: string
        required: true
      - name: subnetwork_self_link
        description: The self link of the subnetwork to host the cluster in.
        varType: string
        required: true
      - name: pods_ip_range_name
        description: The name of the secondary subnet ip range to use for pods.
        varType: string
        defaultValue: pods
      - name: services_ip_range_name
        description: The name of the secondary subnet range to use for services.
        varType: string
        defaultValue: services
      - name: enable_private_ipv6_google_access
        description: The private IPv6 google access type for the VMs in this subnet.
        varType: bool
        defaultValue: true
      - name: release_channel
        description: The release channel of this cluster. Accepted values are `UNSPECIFIED`, `RAPID`, `REGULAR` and `STABLE`.
        varType: string
        defaultValue: UNSPECIFIED
      - name: min_master_version
        description: The minimum version of the master. If unset, the cluster's version will be set by GKE to the version of the most recent official release.
        varType: string
      - name: version_prefix
        description: If provided, Terraform will only return versions that match the string prefix. For example, `1.31.` will match all `1.31` series releases. Since this is just a string match, it's recommended that you append a `.` after minor versions to ensure that prefixes such as `1.3` don't match versions like `1.30.1-gke.10` accidentally.
        varType: string
        defaultValue: 1.31.
      - name: maintenance_start_time
        description: Start time for daily maintenance operations. Specified in GMT with `HH:MM` format.
        varType: string
        defaultValue: "09:00"
      - name: maintenance_exclusions
        description: List of maintenance exclusions. A cluster can have up to three.
        varType: |-
          list(object({
              name            = string
              start_time      = string
              end_time        = string
              exclusion_scope = string
            }))
        defaultValue: []
      - name: enable_filestore_csi
        description: The status of the Filestore Container Storage Interface (CSI) driver addon, which allows the usage of filestore instance as volumes.
        varType: bool
        defaultValue: false
      - name: enable_gcsfuse_csi
        description: The status of the GCSFuse Filestore Container Storage Interface (CSI) driver addon, which allows the usage of a gcs bucket as volumes.
        varType: bool
        defaultValue: false
      - name: enable_persistent_disk_csi
        description: The status of the Google Compute Engine Persistent Disk Container Storage Interface (CSI) driver addon, which allows the usage of a PD as volumes.
        varType: bool
        defaultValue: true
      - name: enable_parallelstore_csi
        description: The status of the Google Compute Engine Parallelstore Container Storage Interface (CSI) driver addon, which allows the usage of a parallelstore as volumes.
        varType: bool
        defaultValue: false
      - name: enable_dcgm_monitoring
        description: Enable GKE to collect DCGM metrics
        varType: bool
        defaultValue: false
      - name: enable_node_local_dns_cache
        description: Enable GKE NodeLocal DNSCache addon to improve DNS lookup latency
        varType: bool
        defaultValue: false
      - name: system_node_pool_enabled
        description: Create a system node pool.
        varType: bool
        defaultValue: true
      - name: system_node_pool_name
        description: Name of the system node pool.
        varType: string
        defaultValue: system
      - name: system_node_pool_node_count
        description: The total min and max nodes to be maintained in the system node pool.
        varType: |-
          object({
              total_min_nodes = number
              total_max_nodes = number
            })
        defaultValue:
          total_max_nodes: 10
          total_min_nodes: 2
      - name: system_node_pool_machine_type
        description: Machine type for the system node pool.
        varType: string
        defaultValue: e2-standard-4
      - name: system_node_pool_disk_size_gb
        description: Size of disk for each node of the system node pool.
        varType: number
        defaultValue: 100
      - name: system_node_pool_disk_type
        description: Disk type for each node of the system node pool.
        varType: string
      - name: system_node_pool_taints
        description: Taints to be applied to the system node pool.
        varType: |-
          list(object({
              key    = string
              value  = any
              effect = string
            }))
        defaultValue:
          - effect: NO_SCHEDULE
            key: components.gke.io/gke-managed-components
            value: true
      - name: system_node_pool_kubernetes_labels
        description: |
          Kubernetes labels to be applied to each node in the node group. Key-value pairs. 
          (The `kubernetes.io/` and `k8s.io/` prefixes are reserved by Kubernetes Core components and cannot be specified)
        varType: map(string)
      - name: system_node_pool_image_type
        description: The default image type used by NAP once a new node pool is being created. Use either COS_CONTAINERD or UBUNTU_CONTAINERD.
        varType: string
        defaultValue: COS_CONTAINERD
      - name: system_node_pool_enable_secure_boot
        description: Enable secure boot for the nodes.  Keep enabled unless custom kernel modules need to be loaded. See [here](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot) for more info.
        varType: bool
        defaultValue: true
      - name: enable_private_nodes
        description: (Beta) Whether nodes have internal IP addresses only.
        varType: bool
        defaultValue: true
      - name: enable_private_endpoint
        description: (Beta) Whether the master's internal IP address is used as the cluster endpoint.
        varType: bool
        defaultValue: true
      - name: master_ipv4_cidr_block
        description: (Beta) The IP range in CIDR notation to use for the hosted master network.
        varType: string
        defaultValue: 172.16.0.32/28
      - name: enable_master_global_access
        description: Whether the cluster master is accessible globally (from any region) or only within the same region as the private endpoint.
        varType: bool
        defaultValue: false
      - name: gcp_public_cidrs_access_enabled
        description: Whether the cluster master is accessible via all the Google Compute Engine Public IPs. To view this list of IP addresses look here https://cloud.google.com/compute/docs/faq#find_ip_range
        varType: bool
        defaultValue: false
      - name: master_authorized_networks
        description: External network that can access Kubernetes master through HTTPS. Must be specified in CIDR notation.
        varType: |-
          list(object({
              cidr_block   = string
              display_name = string
            }))
        defaultValue: []
      - name: service_account_email
        description: Service account e-mail address to use with the system node pool
        varType: string
      - name: service_account_scopes
        description: Scopes to to use with the system node pool.
        varType: set(string)
        defaultValue:
          - https://www.googleapis.com/auth/cloud-platform
      - name: configure_workload_identity_sa
        description: When true, a kubernetes service account will be created and bound using workload identity to the service account used to create the cluster.
        varType: bool
        defaultValue: false
      - name: autoscaling_profile
        description: (Beta) Optimize for utilization or availability when deciding to remove nodes. Can be BALANCED or OPTIMIZE_UTILIZATION.
        varType: string
        defaultValue: OPTIMIZE_UTILIZATION
      - name: authenticator_security_group
        description: The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com
        varType: string
      - name: enable_dataplane_v2
        description: Enables [Dataplane v2](https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2). This setting is immutable on clusters. If null, will default to false unless using multi-networking, in which case it will default to true
        varType: bool
      - name: labels
        description: GCE resource labels to be applied to resources. Key-value pairs.
        varType: map(string)
        required: true
      - name: timeout_create
        description: Timeout for creating a node pool
        varType: string
      - name: timeout_update
        description: Timeout for updating a node pool
        varType: string
      - name: service_account
        description: "DEPRECATED: use service_account_email and scopes."
        varType: |-
          object({
              email  = string,
              scopes = set(string)
            })
      - name: enable_multi_networking
        description: Enables [multi networking](https://cloud.google.com/kubernetes-engine/docs/how-to/setup-multinetwork-support-for-pods#create-a-gke-cluster) (Requires GKE Enterprise). This setting is immutable on clusters and enables [Dataplane V2](https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2?hl=en). If null, will determine state based on if additional_networks are passed in.
        varType: bool
      - name: additional_networks
        description: Additional network interface details for GKE, if any. Providing additional networks enables multi networking and creates relevat network objects on the cluster.
        varType: |-
          list(object({
              network            = string
              subnetwork         = string
              subnetwork_project = string
              network_ip         = string
              nic_type           = string
              stack_type         = string
              queue_count        = number
              access_config = list(object({
                nat_ip       = string
                network_tier = string
              }))
              ipv6_access_config = list(object({
                network_tier = string
              }))
              alias_ip_range = list(object({
                ip_cidr_range         = string
                subnetwork_range_name = string
              }))
            }))
        defaultValue: []
      - name: cluster_reference_type
        description: "How the google_container_node_pool.system_node_pools refers to the cluster. Possible values are: {SELF_LINK, NAME}"
        varType: string
        defaultValue: SELF_LINK
      - name: cluster_availability_type
        description: "Type of cluster availability. Possible values are: {REGIONAL, ZONAL}"
        varType: string
        defaultValue: REGIONAL
      - name: default_max_pods_per_node
        description: The default maximum number of pods per node in this cluster.
        varType: number
      - name: networking_mode
        description: Determines whether alias IPs or routes will be used for pod IPs in the cluster. Options are VPC_NATIVE or ROUTES. VPC_NATIVE enables IP aliasing. The default is VPC_NATIVE.
        varType: string
        defaultValue: VPC_NATIVE
      - name: deletion_protection
        description: |
          "Determines if the cluster can be deleted by gcluster commands or not".
          To delete a cluster provisioned with deletion_protection set to true, you must first set it to false and apply the changes.
          Then proceed with deletion as usual.
        varType: bool
        defaultValue: false
      - name: upgrade_settings
        description: |
          Defines gke cluster upgrade settings. It is highly recommended that you define all max_surge and max_unavailable.
          If max_surge is not specified, it would be set to a default value of 0.
          If max_unavailable is not specified, it would be set to a default value of 1.  
        varType: |-
          object({
              strategy        = string
              max_surge       = optional(number)
              max_unavailable = optional(number)
            })
        defaultValue:
          max_surge: 0
          max_unavailable: 1
          strategy: SURGE
    outputs:
      - name: cluster_id
        description: An identifier for the resource with format projects/{{project_id}}/locations/{{region}}/clusters/{{name}}.
      - name: gke_ca_cert
        description: GKe cluster's ca cert.
      - name: gke_cluster_exists
        description: A static flag that signals to downstream modules that a cluster has been created. Needed by community/modules/scripts/kubernetes-operations.
      - name: gke_endpoint
        description: GKe cluster's endpoint.
      - name: gke_version
        description: GKE cluster's version.
      - name: instructions
        description: Instructions on how to connect to the created cluster.
      - name: k8s_service_account_name
        description: Name of k8s service account.
  requirements:
    roles:
      - level: Project
        roles:
          - roles/owner
    services:
      - cloudresourcemanager.googleapis.com
      - storage-api.googleapis.com
      - serviceusage.googleapis.com
    providerVersions:
      - source: gavinbunney/kubectl
        version: ">= 1.7.0"
      - source: hashicorp/google
        version: "> 5.0"
      - source: hashicorp/google-beta
        version: "> 5.0"
      - source: hashicorp/http
        version: ~> 3.0
      - source: hashicorp/kubernetes
        version: ~> 2.23
      - source: hashicorp/null
        version: ~> 3.0
