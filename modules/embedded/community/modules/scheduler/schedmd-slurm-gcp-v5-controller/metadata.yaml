apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-ai-on-gke-embedded/community/modules/scheduler/schedmd-slurm-gcp-v-5-controller
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: terraform-google-ai-on-gke
    source:
      repo: https://github.com/singhalbhaskar/terraform-google-ai-on-gke
      sourceType: git
      dir: /modules/embedded/community/modules/scheduler/schedmd-slurm-gcp-v5-controller
    version: 1.41.0
    actuationTool:
      flavor: Terraform
      version: ">= 1.1"
    description: {}
    icon: assets/icon.png
  content:
    examples:
      - name: simple_example
        location: examples/simple_example
  interfaces:
    variables:
      - name: access_config
        description: Access configurations, i.e. IPs via which the VM instance can be accessed via the Internet.
        varType: |-
          list(object({
              nat_ip       = string
              network_tier = string
            }))
        defaultValue: []
      - name: additional_disks
        description: List of maps of disks.
        varType: |-
          list(object({
              disk_name    = string
              device_name  = string
              disk_type    = string
              disk_size_gb = number
              disk_labels  = map(string)
              auto_delete  = bool
              boot         = bool
            }))
        defaultValue: []
      - name: can_ip_forward
        description: Enable IP forwarding, for NAT instances for example.
        varType: bool
        defaultValue: false
      - name: cloud_parameters
        description: cloud.conf options.
        varType: |-
          object({
              no_comma_params = bool
              resume_rate     = number
              resume_timeout  = number
              suspend_rate    = number
              suspend_timeout = number
            })
        defaultValue:
          no_comma_params: false
          resume_rate: 0
          resume_timeout: 300
          suspend_rate: 0
          suspend_timeout: 300
      - name: cloudsql
        description: |
          Use this database instead of the one on the controller.
            server_ip : Address of the database server.
            user      : The user to access the database as.
            password  : The password, given the user, to access the given database. (sensitive)
            db_name   : The database to access.
        varType: |-
          object({
              server_ip = string
              user      = string
              password  = string # sensitive
              db_name   = string
            })
      - name: compute_startup_script
        description: Startup script used by the compute VMs.
        varType: string
        defaultValue: ""
      - name: compute_startup_scripts_timeout
        description: |
          The timeout (seconds) applied to the compute_startup_script. If
          any script exceeds this timeout, then the instance setup process is considered
          failed and handled accordingly.

          NOTE: When set to 0, the timeout is considered infinite and thus disabled.
        varType: number
        defaultValue: 300
      - name: controller_startup_script
        description: Startup script used by the controller VM.
        varType: string
        defaultValue: ""
      - name: controller_startup_scripts_timeout
        description: |
          The timeout (seconds) applied to the controller_startup_script. If
          any script exceeds this timeout, then the instance setup process is considered
          failed and handled accordingly.

          NOTE: When set to 0, the timeout is considered infinite and thus disabled.
        varType: number
        defaultValue: 300
      - name: login_startup_scripts_timeout
        description: |
          The timeout (seconds) applied to the login startup script. If
          any script exceeds this timeout, then the instance setup process is considered
          failed and handled accordingly.

          NOTE: When set to 0, the timeout is considered infinite and thus disabled.
        varType: number
        defaultValue: 300
      - name: cgroup_conf_tpl
        description: Slurm cgroup.conf template file path.
        varType: string
      - name: deployment_name
        description: Name of the deployment.
        varType: string
        required: true
      - name: disable_controller_public_ips
        description: If set to false. The controller will have a random public IP assigned to it. Ignored if access_config is set.
        varType: bool
        defaultValue: true
      - name: disable_default_mounts
        description: |
          Disable default global network storage from the controller
          - /usr/local/etc/slurm
          - /etc/munge
          - /home
          - /apps
          Warning: If these are disabled, the slurm etc and munge dirs must be added
          manually, or some other mechanism must be used to synchronize the slurm conf
          files and the munge key across the cluster.
        varType: bool
        defaultValue: false
      - name: disable_smt
        description: Disables Simultaneous Multi-Threading (SMT) on instance.
        varType: bool
        defaultValue: true
      - name: disk_type
        description: Boot disk type.
        varType: string
        defaultValue: pd-ssd
      - name: disk_size_gb
        description: Boot disk size in GB.
        varType: number
        defaultValue: 50
      - name: disk_auto_delete
        description: Whether or not the boot disk should be auto-deleted.
        varType: bool
        defaultValue: true
      - name: disk_labels
        description: Labels specific to the boot disk. These will be merged with var.labels.
        varType: map(string)
        defaultValue: {}
      - name: enable_devel
        description: Enables development mode. Not for production use.
        varType: bool
        defaultValue: false
      - name: enable_cleanup_compute
        description: |
          Enables automatic cleanup of compute nodes and resource policies (e.g.
          placement groups) managed by this module, when cluster is destroyed.

          NOTE: Requires Python and pip packages listed at the following link:
          https://github.com/GoogleCloudPlatform/slurm-gcp/blob/3979e81fc5e4f021b5533a23baa474490f4f3614/scripts/requirements.txt

          *WARNING*: Toggling this may impact the running workload. Deployed compute nodes
          may be destroyed and their jobs will be requeued.
        varType: bool
        defaultValue: false
      - name: enable_cleanup_subscriptions
        description: |
          Enables automatic cleanup of pub/sub subscriptions managed by this module, when
          cluster is destroyed.

          NOTE: Requires Python and pip packages listed at the following link:
          https://github.com/GoogleCloudPlatform/slurm-gcp/blob/3979e81fc5e4f021b5533a23baa474490f4f3614/scripts/requirements.txt

          *WARNING*: Toggling this may temporarily impact var.enable_reconfigure behavior.
        varType: bool
        defaultValue: false
      - name: enable_reconfigure
        description: |
          Enables automatic Slurm reconfiguration when Slurm configuration changes (e.g.
          slurm.conf.tpl, partition details). Compute instances and resource policies
          (e.g. placement groups) will be destroyed to align with new configuration.
          NOTE: Requires Python and Google Pub/Sub API.
          *WARNING*: Toggling this will impact the running workload. Deployed compute nodes
          will be destroyed and their jobs will be requeued.
        varType: bool
        defaultValue: false
      - name: enable_bigquery_load
        description: Enable loading of cluster job usage into big query.
        varType: bool
        defaultValue: false
      - name: enable_slurm_gcp_plugins
        description: |
          Enables calling hooks in scripts/slurm_gcp_plugins during cluster resume and suspend.
        varType: any
        defaultValue: false
      - name: enable_oslogin
        description: |
          Enables Google Cloud os-login for user login and authentication for VMs.
          See https://cloud.google.com/compute/docs/oslogin
        varType: bool
        defaultValue: true
      - name: enable_confidential_vm
        description: "Enable the Confidential VM configuration. Note: the instance image must support option."
        varType: bool
        defaultValue: false
      - name: enable_external_prolog_epilog
        description: |
          Automatically enable a script that will execute prolog and epilog scripts
          shared under /opt/apps from the controller to compute nodes.
        varType: bool
        defaultValue: false
      - name: enable_shielded_vm
        description: "Enable the Shielded VM configuration. Note: the instance image must support option."
        varType: bool
        defaultValue: false
      - name: epilog_scripts
        description: |
          List of scripts to be used for Epilog. Programs for the slurmd to execute
          on every node when a user's job completes.
          See https://slurm.schedmd.com/slurm.conf.html#OPT_Epilog.
        varType: |-
          list(object({
              filename = string
              content  = string
            }))
        defaultValue: []
      - name: gpu
        description: "DEPRECATED: use var.guest_accelerator"
        varType: |-
          object({
              type  = string
              count = number
            })
      - name: guest_accelerator
        description: List of the type and count of accelerator cards attached to the instance.
        varType: |-
          list(object({
              type  = string,
              count = number
            }))
        defaultValue: []
      - name: labels
        description: Labels, provided as a map.
        varType: map(string)
        defaultValue: {}
      - name: machine_type
        description: Machine type to create.
        varType: string
        defaultValue: c2-standard-4
      - name: metadata
        description: Metadata, provided as a map.
        varType: map(string)
        defaultValue: {}
      - name: min_cpu_platform
        description: |
          Specifies a minimum CPU platform. Applicable values are the friendly names of
          CPU platforms, such as Intel Haswell or Intel Skylake. See the complete list:
          https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform
        varType: string
      - name: network_ip
        description: "DEPRECATED: Use `static_ips` variable to assign an internal static ip address."
        varType: string
      - name: network_storage
        description: An array of network attached storage mounts to be configured on all instances.
        varType: |-
          list(object({
              server_ip             = string,
              remote_mount          = string,
              local_mount           = string,
              fs_type               = string,
              mount_options         = string,
              client_install_runner = map(string)
              mount_runner          = map(string)
            }))
        defaultValue: []
      - name: on_host_maintenance
        description: Instance availability Policy.
        varType: string
        defaultValue: MIGRATE
      - name: partition
        description: Cluster partitions as a list.
        varType: |-
          list(object({
              compute_list = list(string)
              partition = object({
                enable_job_exclusive    = bool
                enable_placement_groups = bool
                network_storage = list(object({
                  server_ip     = string
                  remote_mount  = string
                  local_mount   = string
                  fs_type       = string
                  mount_options = string
                }))
                partition_conf    = map(string)
                partition_feature = string
                partition_name    = string
                partition_nodes = map(object({
                  access_config = list(object({
                    network_tier = string
                  }))
                  bandwidth_tier         = string
                  node_count_dynamic_max = number
                  node_count_static      = number
                  enable_spot_vm         = bool
                  group_name             = string
                  instance_template      = string
                  maintenance_interval   = string
                  node_conf              = map(string)
                  reservation_name       = string
                  spot_instance_config = object({
                    termination_action = string
                  })
                }))
                partition_startup_scripts_timeout = number
                subnetwork                        = string
                zone_policy_allow                 = list(string)
                zone_policy_deny                  = list(string)
                zone_target_shape                 = string
              })
            }))
        defaultValue: []
      - name: preemptible
        description: Allow the instance to be preempted.
        varType: bool
        defaultValue: false
      - name: project_id
        description: Project ID to create resources in.
        varType: string
        required: true
      - name: prolog_scripts
        description: |
          List of scripts to be used for Prolog. Programs for the slurmd to execute
          whenever it is asked to run a job step from a new job allocation.
          See https://slurm.schedmd.com/slurm.conf.html#OPT_Prolog.
        varType: |-
          list(object({
              filename = string
              content  = string
            }))
        defaultValue: []
      - name: region
        description: Region where the instances should be created.
        varType: string
      - name: service_account
        description: |
          Service account to attach to the controller instance. If not set, the
          default compute service account for the given project will be used with the
          "https://www.googleapis.com/auth/cloud-platform" scope.
        varType: |-
          object({
              email  = string
              scopes = set(string)
            })
      - name: shielded_instance_config
        description: |
          Shielded VM configuration for the instance. Note: not used unless
          enable_shielded_vm is 'true'.
            enable_integrity_monitoring : Compare the most recent boot measurements to the
            integrity policy baseline and return a pair of pass/fail results depending on
            whether they match or not.
            enable_secure_boot : Verify the digital signature of all boot components, and
            halt the boot process if signature verification fails.
            enable_vtpm : Use a virtualized trusted platform module, which is a
            specialized computer chip you can use to encrypt objects like keys and
            certificates.
        varType: |-
          object({
              enable_integrity_monitoring = bool
              enable_secure_boot          = bool
              enable_vtpm                 = bool
            })
        defaultValue:
          enable_integrity_monitoring: true
          enable_secure_boot: true
          enable_vtpm: true
      - name: slurm_cluster_name
        description: Cluster name, used for resource naming and slurm accounting. If not provided it will default to the first 8 characters of the deployment name (removing any invalid characters).
        varType: string
      - name: slurmdbd_conf_tpl
        description: Slurm slurmdbd.conf template file path.
        varType: string
      - name: slurm_conf_tpl
        description: Slurm slurm.conf template file path.
        varType: string
      - name: instance_template
        description: |
          Self link to a custom instance template. If set, other VM definition
          variables such as machine_type and instance_image will be ignored in favor
          of the provided instance template.

          For more information on creating custom images for the instance template
          that comply with Slurm on GCP see the "Slurm on GCP Custom Images" section
          in docs/vm-images.md.
        varType: string
      - name: instance_image
        description: |
          Defines the image that will be used in the Slurm controller VM instance.

          Expected Fields:
          name: The name of the image. Mutually exclusive with family.
          family: The image family to use. Mutually exclusive with name.
          project: The project where the image is hosted.

          For more information on creating custom images that comply with Slurm on GCP
          see the "Slurm on GCP Custom Images" section in docs/vm-images.md.
        varType: map(string)
        defaultValue:
          family: slurm-gcp-5-12-hpc-centos-7
          project: schedmd-slurm-public
      - name: instance_image_custom
        description: |
          A flag that designates that the user is aware that they are requesting
          to use a custom and potentially incompatible image for this Slurm on
          GCP module.

          If the field is set to false, only the compatible families and project
          names will be accepted.  The deployment will fail with any other image
          family or name.  If set to true, no checks will be done.

          See: https://goo.gle/hpc-slurm-images
        varType: bool
        defaultValue: false
      - name: allow_automatic_updates
        description: |
          If false, disables automatic system package updates on the created instances.  This feature is
          only available on supported images (or images derived from them).  For more details, see
          https://cloud.google.com/compute/docs/instances/create-hpc-vm#disable_automatic_updates
        varType: bool
        defaultValue: true
      - name: source_image_project
        description: "DEPRECATED: Use `instance_image` instead."
        varType: string
      - name: source_image_family
        description: "DEPRECATED: Use `instance_image` instead."
        varType: string
      - name: source_image
        description: "DEPRECATED: Use `instance_image` instead."
        varType: string
      - name: static_ips
        description: List of static IPs for VM instances.
        varType: list(string)
        defaultValue: []
      - name: network_self_link
        description: Network to deploy to. Either network_self_link or subnetwork_self_link must be specified.
        varType: string
      - name: subnetwork_self_link
        description: Subnet to deploy to. Either network_self_link or subnetwork_self_link must be specified.
        varType: string
      - name: subnetwork_project
        description: The project that subnetwork belongs to.
        varType: string
      - name: tags
        description: Network tag list.
        varType: list(string)
        defaultValue: []
      - name: zone
        description: |
          Zone where the instances should be created. If not specified, instances will be
          spread across available zones in the region.
        varType: string
    outputs:
      - name: cloud_logging_filter
        description: Cloud Logging filter to cluster errors.
      - name: controller_instance_id
        description: The server-assigned unique identifier of the controller compute instance.
      - name: pubsub_topic
        description: Cluster Pub/Sub topic.
  requirements:
    roles:
      - level: Project
        roles:
          - roles/owner
    services:
      - cloudresourcemanager.googleapis.com
      - storage-api.googleapis.com
      - serviceusage.googleapis.com
    providerVersions:
      - source: hashicorp/google
        version: ">= 3.83"
