apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-ai-on-gke-embedded/community/modules/remote-desktop/chrome-remote-desktop
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: terraform-google-ai-on-gke
    source:
      repo: https://github.com/singhalbhaskar/terraform-google-ai-on-gke
      sourceType: git
      dir: /modules/embedded/community/modules/remote-desktop/chrome-remote-desktop
    actuationTool:
      flavor: Terraform
      version: ">= 0.12.31"
    description: {}
    icon: assets/icon.png
  content:
    examples:
      - name: simple_example
        location: examples/simple_example
  interfaces:
    variables:
      - name: project_id
        description: Project in which Google Cloud resources will be created
        varType: string
        required: true
      - name: deployment_name
        description: Cluster Toolkit deployment name. Cloud resource names will include this value.
        varType: string
        required: true
      - name: region
        description: Default region for creating resources
        varType: string
        required: true
      - name: zone
        description: Default zone for creating resources
        varType: string
        required: true
      - name: instance_count
        description: Number of instances
        varType: number
        defaultValue: 1
      - name: network_storage
        description: An array of network attached storage mounts to be configured.
        varType: |-
          list(object({
              server_ip             = string,
              remote_mount          = string,
              local_mount           = string,
              fs_type               = string,
              mount_options         = string,
              client_install_runner = map(string)
              mount_runner          = map(string)
            }))
        defaultValue: []
      - name: instance_image
        description: |
          Image used to build chrome remote desktop node. The default image is
          name="debian-12-bookworm-v20240815" and project="debian-cloud".
          NOTE: uses fixed version of image to avoid NVIDIA driver compatibility issues.

          An alternative image is from name="ubuntu-2204-jammy-v20240126" and project="ubuntu-os-cloud".

          Expected Fields:
          name: The name of the image. Mutually exclusive with family.
          family: The image family to use. Mutually exclusive with name.
          project: The project where the image is hosted.
        varType: map(string)
        defaultValue:
          name: debian-12-bookworm-v20240815
          project: debian-cloud
      - name: disk_size_gb
        description: Size of disk for instances.
        varType: number
        defaultValue: 200
      - name: disk_type
        description: Disk type for instances.
        varType: string
        defaultValue: pd-balanced
      - name: auto_delete_boot_disk
        description: Controls if boot disk should be auto-deleted when instance is deleted.
        varType: bool
        defaultValue: true
      - name: name_prefix
        description: |
          An optional name for all VM and disk resources.
          If not supplied, `deployment_name` will be used.
          When `name_prefix` is supplied, and `add_deployment_name_before_prefix` is set,
          then resources are named by "<`deployment_name`>-<`name_prefix`>-<#>".
        varType: string
      - name: add_deployment_name_before_prefix
        description: |
          If true, the names of VMs and disks will always be prefixed with `deployment_name` to enable uniqueness across deployments.
          See `name_prefix` for further details on resource naming behavior.
        varType: bool
        defaultValue: false
      - name: enable_public_ips
        description: If set to true, instances will have public IPs on the internet.
        varType: bool
        defaultValue: true
      - name: machine_type
        description: Machine type to use for the instance creation. Must be N1 family if GPU is used.
        varType: string
        defaultValue: n1-standard-8
      - name: labels
        description: Labels to add to the instances. Key-value pairs.
        varType: map(string)
        defaultValue: {}
      - name: service_account
        description: Service account to attach to the instance. See https://www.terraform.io/docs/providers/google/r/compute_instance_template.html#service_account.
        varType: |-
          object({
              email  = string,
              scopes = set(string)
            })
        defaultValue:
          email: null
          scopes:
            - https://www.googleapis.com/auth/cloud-platform
      - name: network_self_link
        description: The self link of the network to attach the VM.
        varType: string
        defaultValue: default
      - name: subnetwork_self_link
        description: The self link of the subnetwork to attach the VM.
        varType: string
      - name: network_interfaces
        description: |
          A list of network interfaces. The options match that of the terraform
          network_interface block of google_compute_instance. For descriptions of the
          subfields or more information see the documentation:
          https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#nested_network_interface
          **_NOTE:_** If `network_interfaces` are set, `network_self_link` and
          `subnetwork_self_link` will be ignored, even if they are provided through
          the `use` field. `bandwidth_tier` and `enable_public_ips` also do not apply
          to network interfaces defined in this variable.
          Subfields:
          network            (string, required if subnetwork is not supplied)
          subnetwork         (string, required if network is not supplied)
          subnetwork_project (string, optional)
          network_ip         (string, optional)
          nic_type           (string, optional, choose from ["GVNIC", "VIRTIO_NET", "RDMA", "IRDMA", "MRDMA"])
          stack_type         (string, optional, choose from ["IPV4_ONLY", "IPV4_IPV6"])
          queue_count        (number, optional)
          access_config      (object, optional)
          ipv6_access_config (object, optional)
          alias_ip_range     (list(object), optional)
        varType: |-
          list(object({
              network            = string,
              subnetwork         = string,
              subnetwork_project = string,
              network_ip         = string,
              nic_type           = string,
              stack_type         = string,
              queue_count        = number,
              access_config = list(object({
                nat_ip                 = string,
                public_ptr_domain_name = string,
                network_tier           = string
              })),
              ipv6_access_config = list(object({
                public_ptr_domain_name = string,
                network_tier           = string
              })),
              alias_ip_range = list(object({
                ip_cidr_range         = string,
                subnetwork_range_name = string
              }))
            }))
        defaultValue: []
      - name: metadata
        description: Metadata, provided as a map
        varType: map(string)
        defaultValue: {}
      - name: startup_script
        description: Startup script used on the instance
        varType: string
      - name: guest_accelerator
        description: List of the type and count of accelerator cards attached to the instance. Requires virtual workstation accelerator if Nvidia Grid Drivers are required
        varType: |-
          list(object({
              type  = string,
              count = number
            }))
        defaultValue:
          - count: 1
            type: nvidia-tesla-t4-vws
      - name: threads_per_core
        description: Sets the number of threads per physical core
        varType: number
        defaultValue: 2
      - name: on_host_maintenance
        description: Describes maintenance behavior for the instance. If left blank this will default to `MIGRATE` except for when `placement_policy`, spot provisioning, or GPUs require it to be `TERMINATE`
        varType: string
        defaultValue: TERMINATE
      - name: bandwidth_tier
        description: "  Tier 1 bandwidth increases the maximum egress bandwidth for VMs.\n  Using the `tier_1_enabled` setting will enable both gVNIC and TIER_1 higher bandwidth networking.\n  Using the `gvnic_enabled` setting will only enable gVNIC and will not enable TIER_1.\n  Note that TIER_1 only works with specific machine families & shapes and must be using an image th\nat supports gVNIC. See [official docs](https://cloud.google.com/compute/docs/networking/configure-v\nm-with-high-bandwidth-configuration) for more details.\n"
        varType: string
        defaultValue: not_enabled
      - name: spot
        description: Provision VMs using discounted Spot pricing, allowing for preemption
        varType: bool
        defaultValue: false
      - name: tags
        description: Network tags, provided as a list
        varType: list(string)
        defaultValue: []
      - name: enable_oslogin
        description: Enable or Disable OS Login with "ENABLE" or "DISABLE". Set to "INHERIT" to inherit project OS Login setting.
        varType: string
        defaultValue: ENABLE
      - name: install_nvidia_driver
        description: Installs the nvidia driver (true/false). For details, see https://cloud.google.com/compute/docs/gpus/install-drivers-gpu
        varType: bool
        required: true
    outputs:
      - name: instance_name
        description: Name of the first instance created, if any.
      - name: startup_script
        description: script to load and run all runners, as a string value.
  requirements:
    roles:
      - level: Project
        roles:
          - roles/owner
    services:
      - cloudresourcemanager.googleapis.com
      - storage-api.googleapis.com
      - serviceusage.googleapis.com
